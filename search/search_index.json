{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p>Astrology is alive. It is whole, functional and independent. It has been present in the human spirit from the first civilizations when Man began his long search for meaning. It has spanned eras and cultures, yet always remains perfectly current and relevant. It is clear, clean, and objective knowledge: containing nothing nebulous. Just as it must be clear for one to view the stars at night, so too thought must be clear for one to master astrological interpretation.[^1]</p> <p>Everything has a horoscope, and computing makes it exceptionally easy to keep track of dates and times. Where western astrology has been dominated by natal astrology\u2014something static against which to judge the dynamic\u2014Ephem's focus is on the ephemeral. It's easiest to run <code>ephem now</code> for a snapshot of the second you send the command.</p> <p>For example, this application's first Git commit can be considered its birth or inception:</p> <pre><code>commit 7587dc9634fd682a5a1b40da0f4e54498d34adde\nAuthor: sailorfe &lt;sailorfe@proton.me&gt;\nDate:   Wed Aug 6 13:57:13 2025 -0400\n    initial\n</code></pre> <p>Its chart generated with itself (whew) is</p> <pre><code>ephem (Tropical)\n2025-08-06 13:57:13 EDT | 2025-08-06 17:57:13 UTC\n\n \u2609  14 Leo 31 29\n \u263d  13 Capricorn 04 49\n \u263f   5 Leo 21 05 r\n \u2640   7 Cancer 38 44\n \u2642  29 Virgo 51 32\n \u2643  12 Cancer 55 45\n \u2644   1 Aries 26 07 r\n \u2645   1 Gemini 04 37\n \u2646   1 Aries 53 44 r\n \u2647   2 Aquarius 17 54 r\nT\u260a  18 Pisces 46 07 r\nAC  15 Scorpio 59 37\nMC  20 Leo 02 32\n</code></pre> <p>This tutorial assumes astrological literacy but not necessarily command-line experience. Some resources I recommend:</p> <ul> <li>Learn enough command line to be dangerous</li> <li>Introduction to the command line</li> </ul> <p>By the end, you will have set your default location, saved your own birth chart, elected an event, and answered a horary question, all in the terminal.</p> <p>[^1]: Helena Avelar and Luis Ribeiro, On the Heavenly Spheres, 2010.</p>"},{"location":"00-installation/","title":"Installation Guide","text":"<p>This guide will help you install <code>ephem</code> on macOS, Windows, or Linux. Choose the section that matches your operating system.</p> <ul> <li>macOS</li> <li>Windows</li> <li>Linux</li> </ul> <p></p>"},{"location":"00-installation/#macos","title":"macOS","text":""},{"location":"00-installation/#prerequisites","title":"Prerequisites","text":"<p>First, you need Python 3.8 or later. Check if you have it:</p> <pre><code>python3 --version\n</code></pre> <p>If you see a version number like <code>Python 3.11.x</code> or higher, you're good to go! If not, install Python from python.org.</p>"},{"location":"00-installation/#installing-with-pipx","title":"Installing with pipx","text":"<p><code>pipx</code> installs Python CLI applications in isolated environments, which is perfect for tools like <code>ephem</code>.</p>"},{"location":"00-installation/#step-1-install-pipx","title":"Step 1: Install pipx","text":"<p>If you have Homebrew (recommended):</p> <pre><code>brew install pipx\npipx ensurepath\n</code></pre> <p>Or install via Python:</p> <pre><code>python3 -m pip install --user pipx\npython3 -m pipx ensurepath\n</code></pre> <p>After installation, close and reopen your terminal for the changes to take effect.</p>"},{"location":"00-installation/#step-2-install-ephem","title":"Step 2: Install ephem","text":"<pre><code>pipx install ephem-cli\n</code></pre>"},{"location":"00-installation/#step-3-verify-installation","title":"Step 3: Verify installation","text":"<pre><code>ephem --version\n</code></pre> <p>You should see the version number printed out. Now you can run <code>ephem now</code> to cast your first chart!</p> <p></p>"},{"location":"00-installation/#windows","title":"Windows","text":""},{"location":"00-installation/#prerequisites_1","title":"Prerequisites","text":"<p>You need Python 3.8 or later. Check if you have it by opening PowerShell or Command Prompt and running:</p> <pre><code>python --version\n</code></pre> <p>If Python isn't installed, download it from python.org.</p> <p>Important: During installation, check the box that says \"Add Python to PATH\".</p>"},{"location":"00-installation/#installation-with-pipx","title":"Installation with pipx","text":""},{"location":"00-installation/#step-1-install-pipx_1","title":"Step 1: Install pipx","text":"<p>Open PowerShell or Command Prompt and run:</p> <pre><code>python -m pip install --user pipx\npython -m pipx ensurepath\n</code></pre> <p>Close and reopen PowerShell/Command Prompt after this step.</p>"},{"location":"00-installation/#step-2-install-ephem_1","title":"Step 2: Install ephem","text":"<pre><code>pipx install ephem-cli\n</code></pre>"},{"location":"00-installation/#step-3-verify-installation_1","title":"Step 3: Verify installation","text":"<pre><code>ephem --version\n</code></pre> <p>You should see the version number. Now try <code>ephem now</code> to cast your first chart!</p>"},{"location":"00-installation/#troubleshooting-windows","title":"Troubleshooting Windows","text":"<p>If you get \"command not found\" errors:</p> <ol> <li>Make sure Python is in your PATH (search Windows for \"Environment Variables\")</li> <li>Look for the pipx installation directory (usually <code>%USERPROFILE%\\.local\\bin</code> or <code>%APPDATA%\\Python\\Scripts</code>)</li> <li>Add that directory to your PATH</li> </ol> <p></p>"},{"location":"00-installation/#linux","title":"Linux","text":""},{"location":"00-installation/#prerequisites_2","title":"Prerequisites","text":"<p>Because Ephem's core dependency is a C extension, you'll need C and Python build tools installed on your system. These are likely already present in any desktop-geared distribution, but if you're using a minimal environment, you may need to run:</p> <ul> <li>Debian/Ubuntu/WSL: <code>sudo update &amp;&amp; sudo apt install build-essential python3-dev</code></li> <li>Fedora/RHEL: <code>sudo dnf install @development-tools python3-devel</code></li> <li>Arch: <code>sudo pacman -Syu base-devel python</code></li> <li>Alpine Linux: <code>doas apk add base python3-dev</code></li> </ul>"},{"location":"00-installation/#stable-release","title":"Stable release","text":"<p>The stable release of <code>ephem</code> can be installed directly from PyPI:</p> <pre><code># Run directly without installing\nuvx --from ephem-cli ephem\n\n# Or install globally\nuv tool install ephem-cli\n\n# Traditional methods\npip install --user ephem-cli    # if you use pip\npipx install ephem-cli          # if you use pipx, especially Debian/Ubuntu\n</code></pre>"},{"location":"00-installation/#building-from-source","title":"Building from source","text":"<p>To build from the <code>main</code> branch:</p> <pre><code>git clone https://codeberg.org/sailorfe/ephem.git\ncd ephem\nuv run ephem                    # run directly\n# or\nuv sync &amp;&amp; uv run ephem         # for development\n</code></pre>"},{"location":"00-installation/#testing-pre-releases","title":"Testing pre-releases","text":"<p>You can install the current pre-release from Codeberg:</p> <pre><code># Run pre-release directly from Codeberg\nuvx --from https://codeberg.org/sailorfe/ephem ephem-cli\n\n# Or install pre-release\nuv tool install ephem-cli \\\n  --index https://codeberg.org/api/packages/sailorfe/pypi/simple/ \\\n  --prerelease allow\n</code></pre>"},{"location":"00-installation/#whats-next","title":"What's next?","text":"<p>Once installed, continue to Getting Started to cast your first chart and configure your default location!</p>"},{"location":"00-installation/#getting-help","title":"Getting help","text":"<p>If you run into issues:</p> <ul> <li>Check that Python 3.8+ is installed: <code>python --version</code> or <code>python3 --version</code></li> <li>Make sure the installation directory is in your PATH</li> <li>Hit up the Discord or file an issue with your OS details and any error messages.</li> </ul>"},{"location":"10-getting-started/","title":"Getting Started","text":""},{"location":"10-getting-started/#your-first-ephem-chart","title":"Your first <code>ephem</code> chart","text":"<p>The fastest way to try <code>ephem</code> is by running</p> <pre><code>$ ephem now\n</code></pre> <p>The output should look like</p> <pre><code>No valid location provided or found in config. No angles will be printed.\nChart of the Moment hyp. (Tropical)\n2025-09-15 22:05 UTC\n\n\u2609   23 Virgo 18 54\n\u263d   12 Cancer 24 27\n\u263f   25 Virgo 28 38\n\u2640   25 Leo 36 06\n\u2642   25 Libra 42 58\n\u2643   20 Cancer 22 15\n\u2644   28 Pisces 55 17 r\n\u2645    1 Gemini 25 27 r\n\u2646    0 Aries 58 04 r\n\u2647    1 Aquarius 32 56 r\nT\u260a  18 Pisces 19 53\n</code></pre> <p>This purposely mimics Astrodienst's Chart of the Moment, which prints a chart without geographical information\u2014no angles, no houses. This is plenty useful on its own if you know your own birth chart by heart or use techniques like essential dignity, but the ascendant and midheaven are the two most rapidly changing and geocentric (well, geo-dependent) points of any horoscope.</p>"},{"location":"10-getting-started/#setting-location-defaults","title":"Setting location defaults","text":"<p><code>ephem</code> uses decimal degrees for coordinates, which you can find with the following:</p> <ol> <li>Look up your locale on Wikipedia.</li> <li>At the top right of the desktop site, you should see hyperlinked coordinates, most likely printed in degrees-minutes-seconds (DMS) like <code>36\u00b015\u20320\u2033S 142\u00b025\u20320\u2033E</code>. Click this link to go to GeoHack.</li> <li>From GeoHack, note these coordinates in decimal degrees. In our example, this looks like <code>-36.25, 142.416667</code>.</li> <li>Rerun the <code>now</code> command with these additions:</li> </ol> <pre><code># example: Warracknabeal, Australia\n$ ephem now -y -36.25 -x 142.416667 --save-config\n</code></pre> <ul> <li>Because this example is in the southern hemisphere, <code>-y/--lat</code> is negative.</li> <li>Because this example is east of the prime meridian, <code>-x/--lng</code> is positive.</li> <li><code>--save-config</code> is an optional argument that can be run repeatedly to update your locale, display, and calculation preferences. You can read more about configuration under Display &amp; Configuration Options</li> </ul> <p>Running this command with <code>--save-config</code>  should give you something like</p> <pre><code>Saved location settings to /home/user/.config/ephem/ephem.toml\nChart of the Moment (Tropical)\n2025-09-15 22:05 UTC @ -36.25 142.416667\n\n\u2609   23 Virgo 18 55\n\u263d   12 Cancer 24 42\n\u263f   25 Virgo 28 40\n\u2640   25 Leo 36 07\n\u2642   25 Libra 42 59\n\u2643   20 Cancer 22 15\n\u2644   28 Pisces 55 17 r\n\u2645    1 Gemini 25 27 r\n\u2646    0 Aries 58 04 r\n\u2647    1 Aquarius 32 56 r\nT\u260a  18 Pisces 19 53\nAC  29 Libra 30 45\nMC  17 Cancer 33 04\n</code></pre> <p>See! Now we have the ascendant and midheaven, <code>AC</code> and <code>MC</code>.</p> <p>You can check your current configuration by running <code>ephem --show-config</code>. At this point, it should output</p> <pre><code>Location defaults:\n  Latitude: -36.25\n  Longitude: 142.416667\n</code></pre> <p>If you want to save this moment\u2014your first <code>ephem</code> chart!\u2014for the fun of it, run <code>ephem now --save</code>. But your first saved chart should probably be your birth chart, no?</p>"},{"location":"20-birth-event-charts/","title":"Birth and Event Charts","text":""},{"location":"20-birth-event-charts/#ephem-cast","title":"<code>ephem cast</code>","text":"<p>The command structure for <code>ephem cast</code> goes:</p> <pre><code>$ ephem cast DATE [TIME] [NAME STRING] [options]\n</code></pre> <p>After you've typed however much time data you have and an optional chart name, every argument\u2014latitude, longitude, and time zone\u2014can follow in any order.  These all result in the same chart:</p> <pre><code># every argument\n$ ephem cast 1996-08-26 17:20 \"Jeon Soyeon\" -z Asia/Seoul -y 37.488167 -x 127.085472\n\n# no title, coordinates before tz, and -x/--lng before -y/--lat\n$ ephem cast 1996-08-26 17:20 -x 127.085472 -y 37.488167 -z Asia/Seoul\n\n# you can even throw the time zone in the middle of the coordinates\n$ ephem cast 1996-08-26 17:20 -y 37.488167 -z Asia/Seoul -x 127.085472\n</code></pre> <p><code>ephem cast</code> is designed to accept incomplete data for approximate  charts. If you only have a date, it will give you something to work with. Given only a date, e.g. <code>ephem cast 1989-12-13 \"Taylor Swift\"</code>, it:</p> <ul> <li>uses UTC noon</li> <li>uses your location defaults if configured; otherwise, Null Island (0,0)</li> <li>doesn't print angles</li> <li>appends <code>hyp.</code> (hypothetical) after the chart title</li> </ul> <p>All you need to do to save a chart to your database (<code>~/.local/share/ephem/ephem.db</code>) is append a <code>--save</code> flag anywhere in your <code>cast</code> command.</p> <pre><code>$ ephem cast 1996-08-26 17:20 \"Jeon Soyeon\" -z Asia/Seoul -y 37.488167 -x 127.085472 --save\n</code></pre> <p>This prints a confirmation message after the chart output:</p> <pre><code>Jeon Soyeon (Tropical)\n1996-08-26 17:20:00 KST | 1996-08-26 08:20:00 UTC @ 37.488167 127.085472\n\n\u2609    3 Virgo 22 22\n\u263d   29 Capricorn 28 28\n\u263f    0 Libra 05 24\n\u2640   17 Cancer 43 45\n\u2642   20 Cancer 47 56\n\u2643    7 Capricorn 55 39 r\n\u2644    6 Aries 12 36 r\n\u2645    1 Aquarius 24 41 r\n\u2646   25 Capricorn 24 50 r\n\u2647    0 Sagittarius 24 14\nT\u260a   8 Libra 28 00 r\nAC  28 Capricorn 09 31\nMC  19 Scorpio 24 02\n\nChart saved at index 1.\n</code></pre> <p>You can verify it was saved by running <code>ephem data view</code>:</p> <pre><code>[1] Jeon Soyeon\n   UTC:     1996-08-26T08:20:00+00:00\n   Local:   1996-08-26T17:20:00+09:00\n   Lat:     37.488167, Lng: 127.085472\n</code></pre> <p>And recalculate it with <code>ephem data load 1</code>.</p> <p>There is a more detailed breakdown of how to interact with <code>ephem</code>'s saved data under Database Management.</p>"},{"location":"20-birth-event-charts/#time-zone-support","title":"Time zone support","text":"<p>One of the biggest difference between <code>ephem now</code> and <code>ephem cast</code> is that <code>now</code> uses your computer's system time\u2014printed in UTC by default\u2014while <code>cast</code> works with local time.</p> <p>For casting charts, especially verbatim from client intake, you'll need an IANA time zone string. <code>ephem</code> uses the Python standard library module <code>zoneinfo</code>, which rules because it handles daylight savings for you. You can list all available zone strings alphabetically with <code>ephem --list-zones</code>, but this list is nearly 500 items long. There are various online sources where you can look up tz strings instead, but I like Datetime.app. As a quick, US-centric guide:</p> <ul> <li>UTC-5: <code>America/New_York</code> (Eastern Standard Time)</li> <li>UTC-6: <code>America/Chicago</code> (Central Standard Time)</li> <li>UTC-7: <code>America/Denver</code> (Mountain Standard Time)</li> <li>UTC-8: <code>America/Los_Angeles</code> (Pacific Standard Time)</li> </ul> <p>Alternately, you can convert any time to UTC and avoid <code>-z/--timezone</code> altogether, but this gets weird near midnight or the International Date Line, and it's good practice to stay true to the data as given.</p>"},{"location":"30-electional-examples/","title":"Electional Examples","text":"<p>Electional astrology, also known as inceptional astrology, is the practice of selecting optimal times and dates to begin or incept something. It's arguably one of the oldest and most accessible disciplines: farmers choose (elect) the full moon nearest to the autumnal equinox to  harvest their fall crops, for example.</p> <p>To elect a time with<code>ephem</code>, you will want to use the <code>ephem cal</code> and <code>ephem cast</code> commands. For something on the same day or near it, <code>ephem now</code> has its place here, too. Calling <code>ephem cal</code> is no different from referring to The American Ephemeris or PDF versions of the Swiss Ephemeris; you're just using the actual software library from which those PDFs were generated, and interacting with the information more quickly and easily.</p>"},{"location":"30-electional-examples/#planning-a-wedding-with-ephem-cal-and-ephem-cast","title":"Planning a wedding with <code>ephem cal</code> and <code>ephem cast</code>","text":"<p>Pretend you've been hired to elect a fall wedding that will take place outdoors in northern California, ideally in 2026. The climate means November is a serious possibility. The couple would prefer a weekend but clearly put enough stock in event astrology to ask you, so a weekday wedding is not out of the question.</p> <p><code>ephem cal</code> takes a year followed by a month written either in full, as a 3-letter abbreviation, or as an integer (1-12), case insensitive:</p> <pre><code>$ ephem cal 2026 Sep\n$ ephem cal 2026 september\n$ ephem cal 2026 9\n</code></pre> <p>In September 2026, Venus (planet of love) ingresses from Libra (its domicile) into Scorpio (its detriment) on Sept. 11. Running <code>ephem cal 2026 10</code> shows that it will actually turn retrograde on Oct. 4, re-entering Libra on Oct. 26 before stationing direct on Nov. 15. It's up to you whether Venus' condition by sign matters to you more than its direction.</p> <p>For the sake of this example, let's say you're looking at November 15-17 for the very end of warm daytime weather and to catch the Moon in Aquarius trining Venus in Libra. Venus is late enough in Libra that it doesn't oppose Saturn in Aries... but you run the risk of Jupiter opposing the Moon and forming a T-square with the Sun since they're all in fixed signs. Oh no. You can probably go back to early September or jump all the way to December to avoid the Sun-Jupiter square of late Scorpio season, but then it wouldn't be a good outdoor wedding, would it? So we've narrowed it down to Sept. 5 for a different air Moon-Venus trine, and added Mars fallen in Cancer to minimize conflict. Here you can just run</p> <pre><code>$ ephem cast 2026-09-05 15:00 \"Wedding\" -z America/Los_Angeles -y 37 -x -122\n</code></pre> <p>with various times until you get a pleasant ascendant and the malefics off the angles, of course keeping it reasonable. Outdoor weddings want daylight, generally speaking, especially with temperature differences, and I landed around 10-10:30 a.m. for Libra rising or 2-3:30 p.m. for Sagittarius rising. Realistically, this is just one date of several you would find.</p>"},{"location":"30-electional-examples/#sending-an-email-with-ephem-now-and-ephem-cast","title":"Sending an email with <code>ephem now</code> and <code>ephem cast</code>","text":"<p>This is the much more boring way I use electional astrology and the reason for the <code>-s/--shift</code> optional argument specific to <code>ephem now</code>.</p> <p>Scenario: It's 11:45 p.m., and I've just drafted an email I mean to send the next day. If I run</p> <pre><code>$ ephem now -s 12h\n</code></pre> <p>I see that around noon tomorrow, the local ascendant will be Scorpio, which would put a very pleasant Virgo Mercury in the 12th house and make a detrimented Mars in Libra the ruler of this election\u2014terrible! And a waste of a good Mercury transit!  Since it's Virgo season, I know Mercury is near the sun, so sunrise will put Mercury in the first house. I confirm this with</p> <pre><code>$ ephem now -s 6h\n</code></pre> <p>and fine tune it with minutes. I've switched to <code>ephem cast</code> because <code>--shift</code> only takes weeks, days, hours, and minutes\u2014and land on</p> <pre><code>$ ephem cast 2025-09-16 7:32 \"email\" -z America/New_York\nemail (Tropical)\n2025-09-16 07:32:00 EDT | 2025-09-16 11:32:00 UTC\n\u2609   23 Virgo 51 40\n\u263d   20 Cancer 01 46\n\u263f   26 Virgo 29 58\n\u2640   26 Leo 17 01\n\u2642   26 Libra 05 19\n\u2643   20 Cancer 27 25\n\u2644   28 Pisces 52 42 r\n\u2645    1 Gemini 25 10 r\n\u2646    0 Aries 57 09 r\n\u2647    1 Aquarius 32 31 r\nT\u260a  18 Pisces 20 00\nAC  26 Virgo 42 11\nMC  26 Gemini 35 55\n</code></pre>"},{"location":"40-horary-workflows/","title":"Horary Workflows","text":"<p>Horary astrology is divination from a horoscope. In Horary Examples: Traditional Horary Astrology, Kathryn Silvestre writes: \"Someone asks a question on a matter of importance to them. When the question reaches the ears or eyes of an astrologer with the knowledge to judge the chart, the question is born.\" However, you may take a different approach:</p> <ul> <li>Time: If the question is asked in writing, do you use<ul> <li>the moment it landed in your inbox?</li> <li>the moment you opened it?</li> </ul> </li> <li>Location: If the question is asked over a distance (most likely), do you use<ul> <li>your coordinates?</li> <li>the coordinates of the querent? (an extra thing to ask for/look up)</li> <li>the midpoint/average between the two? (arithmetic...)</li> </ul> </li> </ul> <p>Assuming you use the more conventional approach, <code>now</code> should be sufficient for most horary questions, and I suggest saving the chart you cast with the <code>--save</code> flag. A chart run with <code>now --save</code> will have a default title of the UTC date and time, like <code>2025-09-17 19:52: 12 UTC</code>, which you may want to replace with the question asked. We'll talk about how to modify saved charts under Advanced Usage.</p> <p>If you have location preferences, you can use <code>cast</code> instead. You lose the seconds-accuracy of <code>ephem now</code>, but replace it with geographic precision.</p>"},{"location":"50-database-management/","title":"Database Management","text":"<p>Besides the <code>--save</code> option to <code>now</code> and <code>cast</code>, the <code>data</code> command lets you interact with your saved chart database. It has the following subcommands:</p> <ul> <li><code>data view</code>: View database.</li> <li><code>data load N</code>: Re-generate a chart from saved input data.</li> <li><code>data delete N</code>: Delete chart.</li> <li><code>data sync</code>: Sync YAML charts with database; see Advanced Usage.</li> </ul> <p>Each chart in your database has a unique integer ID that you will need to know to interact with your charts. The first command you should run is <code>data view</code>.</p> <pre><code>$ ephem data view\n\n[1] Jean Cremers\n   UTC:     1957-03-14T18:55:00+00:00\n   Local:   1957-03-14T19:55:00+01:00\n   Lat:     52.0, Lng: 6.0\n\n[2] Kevin DeCapite\n   UTC:     1976-11-29T17:32:00+00:00\n   Local:   1976-11-29T12:32:00-05:00\n   Lat:     41.3919, Lng: -81.7286\n\n[3] Walter Pullen\n   UTC:     1971-11-19T19:01:00+00:00\n   Local:   1971-11-19T11:01:00-08:00\n   Lat:     47.6, Lng: -122.33\n\n[4] Jeon Soyeon\n   UTC:     1996-08-26T08:20:00+00:00\n   Local:   1996-08-26T17:20:00+09:00\n   Lat:     37.488167, Lng: 127.085472\n\n[5] Nick Cave\n   UTC:     1957-09-22T02:20:00+00:00\n   Local:   1957-09-22T12:20:00+10:00\n   Lat:     -36.25, Lng: 142.416667\n</code></pre> <ul> <li>You can store as many charts as your local storage allows, but scrolling through the output can get tedious.</li> <li>The ID #'s are permanent. If you delete charts 2-4, the sequence will look like <code>1, 5</code>. This is fine! (she said with a Virgo moon)</li> </ul>"},{"location":"60-advanced-usage/","title":"Advanced Usage: YAML database","text":"<p><code>ephem</code>'s database is designed to be usable with only the <code>data view/load/delete</code> commands, but you may want to edit an existing chart\u2014e.g., rename a chart created with <code>now --save</code>\u2014or create new ones without running any commands. This is where the <code>data sync</code> comes in.</p> <p>The database you just interacted with is stored at <code>~/.local/share/ephem/ephem.db</code>:</p> <pre><code>.local/share/ephem\n|-- charts/\n|   |-- jean-cremers.yaml\n|   |-- jeon-soyeon.yaml\n|   |-- kevin-decapite.yaml\n|   |-- nick-cave.yaml\n|   `-- walter-pullen.yaml\n`-- ephem.db\n</code></pre> <p>Each time you run <code>--save</code>, it creates a new chart under <code>charts/</code>. You can ignore this entirely, but if you open one in a text editor like <code>n/vim</code> or <code>nano</code>, you'll see something like this:</p> <pre><code>name: Nick Cave\ntimestamp_utc: '1957-09-22T02:20:00+00:00'\ntimestamp_input: '1957-09-22T12:20:00+10:00'\nlatitude: -36.25\nlongitude: 142.416667\n_metadata:\n  created: '2025-09-10T12:55:37.004823'\n  source: ephem_cli\n  tags: [famous, musician, adb, rodden-c]\n</code></pre>"},{"location":"60-advanced-usage/#creating-new-charts-with-yaml","title":"Creating new charts with YAML","text":"<pre><code>$ cd ~/.local/share/ephem/charts\n$ cp some-chart.yaml new-chart.yaml\n$ $EDITOR new-chart.yaml\n$ ephem data sync\n</code></pre> <p>This workflow can be faster than running <code>ephem cast --save</code>, but the one tradeoff I can think of is you'll need to perform a local time -&gt; UTC conversion yourself. You can also remove or add as many <code>_metadata</code> fields as you want.</p>"},{"location":"60-advanced-usage/#editing-existing-yaml-charts","title":"Editing existing YAML charts","text":"<pre><code>$ cd ~/.local/share/ephem/charts\n$ $EDITOR some-chart.yaml\n$ ephem data sync\n</code></pre> <p>Charts created with <code>ephem now --save</code> get timestamped names like \"Chart 2025-09-17 14:30:25 UTC\". To give them meaningful names, edit both the filename and the <code>name:</code> field inside:</p> <pre><code>$ cd ~/.local/share/ephem/charts\n$ mv chart-2025-09-17-14-30-25-utc.yaml mercury-retrograde.yaml\n$ $EDITOR mercury-retrograde.yaml                                   # Change name: field\n$ ephem data sync                                                   # Creates backup of original timestamped version\n</code></pre> <p>Note: <code>ephem data sync</code> will recreate the original timestamped .yaml file because the chart still exists in ephem.db. This functions as a backup! It's generally poor science to discard data. But if you really want to go nuclear...</p>"},{"location":"60-advanced-usage/#deleting-charts-permanently","title":"Deleting charts permanently \u26a0\ufe0f","text":"<p>Combine these commands:</p> <pre><code>$ ephem data delete N &amp;&amp; rm ~/.local/share/ephem/charts/some-chart.yaml\n</code></pre>"},{"location":"70-display-config/","title":"Display &amp; Configuration","text":""},{"location":"70-display-config/#the-configuration-file","title":"The configuration file","text":"<p>The <code>ephem</code> config lives at <code>~/.config/ephem/ephem.toml</code>. If you open it in a text editor, it might look something like:</p> <pre><code># ephem.toml\n[display]\nno-geo = true\nclassical = true\nascii = true\n\n[location]\nlat = -36.25\nlng = 142.416667\n\n[zodiac]\noffset = 0\n</code></pre> <p>While running <code>ephem --show-config</code> prints the same information as:</p> <pre><code>Location defaults:\n  Latitude:  -36.25\n  Longitude: 142.416667\n\nZodiac system:\n  System: Sidereal \u2014 Fagan-Bradley (index 0)\n\nDisplay preferences:\n  Hide coordinates: enabled\n  Classical planets only: enabled\n  ASCII mode (no Unicode glyphs): enabled\n</code></pre> <p><code>--save-config</code> tracks changes to single fields declared through optional flags, but not necessarily their omission, e.g. you accidentally configured a sidereal offset and can't change it back to tropical. In such cases, you may want to delete the old <code>ephem.toml</code> before making major changes:</p> <pre><code>$ rm ~/.config/ephem/ephem.toml\n</code></pre>"},{"location":"70-display-config/#configuration-options","title":"Configuration options","text":"<p>You already got a taste of <code>--save-config</code> when you set your location defaults, but let's take a look at all the configuration options available for the three calculation commands.</p> <p><code>now</code>, <code>cast</code> and <code>cal</code>: - <code>-o N/--offset N</code>: sidereal ayanamsa offset or None for tropical. Run <code>--list-offsets</code> to see all 47 available ayanamsas and find the corresponding index <code>N</code>. - <code>-a/--ascii</code>: use ASCII text instead of Unicode glyphs. This can smooth over terminal incompatibilities, like strangely formatted <code>cal</code> tables.</p> <p><code>now</code> and <code>cast only</code>: - <code>-t/--theme {sect,mode,element}</code>: choose colorscheme by planetary sect, or sign mode or element. Defaults to sect. - <code>-c/--no-color</code>: disable ANSI colors. - <code>-c/--classical</code>: exclude Uranus through Pluto. - <code>-n/--node {true,mean}</code>: choose lunar node calculation method. - <code>-A/--no-angles</code>: don't print Ascendant or Midheaven. - <code>-G/--no-geo</code>: don't print coordinates.</p>"},{"location":"70-display-config/#display-format-and-color","title":"Display: format and color","text":""},{"location":"70-display-config/#unicode-vs-ascii-output","title":"Unicode vs ASCII output","text":"<p>By default, ephem prints planetary glyphs and full sign names for <code>now</code> and <code>cast</code>, and sign glyphs for <code>cal</code>. Appending <code>-a/--ascii</code> changes the format to full planet names and abbreviated signs:</p> <pre><code># default format\nephem (Tropical)\n2025-08-06 17:57:13 UTC\n\n \u2609  14 Leo 31 28\n \u263d  13 Capricorn 04 42\n \u263f   5 Leo 21 05 r\n \u2640   7 Cancer 38 44\n \u2642  29 Virgo 51 32\n \u2643  12 Cancer 55 45\n \u2644   1 Aries 26 07 r\n \u2645   1 Gemini 04 37\n \u2646   1 Aries 53 44 r\n \u2647   2 Aquarius 17 54 r\nT\u260a  18 Pisces 46 07 r\nAC  15 Scorpio 56 49\nMC  19 Leo 59 12\n</code></pre> <pre><code># --ascii flag\nephem (Tropical)\n2025-08-06 17:57:13 UTC\n\nSun        14 Leo 31 28\nMoon       13 Cap 04 42\nMercury     5 Leo 21 05 r\nVenus       7 Can 38 44\nMars       29 Vir 51 32\nJupiter    12 Can 55 45\nSaturn      1 Ari 26 07 r\nUranus      1 Gem 04 37\nNeptune     1 Ari 53 44 r\nPluto       2 Aqu 17 54 r\nTrue Node  18 Pis 46 07 r\nAscendant  15 Sco 56 49\nMidheaven  19 Leo 59 12\n</code></pre>"},{"location":"70-display-config/#themes","title":"Themes","text":"Sect Mode Element <ul> <li><code>--theme sect</code>, the default, mimics Astrodienst's Hellenistic wheel style of coloring the visible planets by sect, including Mercury, whose sect is relative to the Sun.</li> <li><code>--theme mode</code> colors the planets by the modality of their sign. This is a useful way to look for squares and oppositions.</li> <li><code>--theme element</code> colors the planets by the element of their sign. This is a useful way to look for trines.</li> </ul>"},{"location":"70-display-config/#suppressing-geodata","title":"Suppressing geodata","text":"<p>Two flags, <code>-G/--no-geo</code> and <code>-A/--no-angles</code>, serve to hold back information from the output. You may consider using them in the following situations:</p> <ul> <li><code>-G/--no-geo</code>: You run <code>ephem now</code> and don't want to doxx yourself if you copy or screenshot the output.</li> <li><code>-A/--no-angles</code> for hypothetical charts with a known time but no known coordinates. Since <code>ephem cast</code> falls back to your location defaults, you might want to suppress both coordinates and angles with <code>-AG</code>.</li> </ul> <p>Note: <code>ephem cast</code> with a date but no time suppresses angles by default. The reason date + time + no coordinates falls back is in case you're electing an event for your current location.</p>"}]}